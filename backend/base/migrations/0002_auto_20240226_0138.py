# Generated by Django 4.2.10 on 2024-02-26 00:38

from django.conf import settings
import base.models
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Extension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extended_from', models.DateField(default=None)),
                ('extended_until', models.DateField(default=None)),
                ('extended_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(default='docxtemplate.docx', upload_to='')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='MaxRentDuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.DurationField()),
            ],
        ),
        migrations.CreateModel(
            name='OauthVerificationProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_code', models.CharField(max_length=100)),
                ('device_code', models.CharField(max_length=100)),
                ('ping_interval', models.DurationField(default=datetime.timedelta(seconds=5))),
                ('last_ping', models.DateTimeField(blank=True, null=True, verbose_name='last time the server got pinged')),
                ('verification_process_expires', models.DateTimeField()),
                ('target', models.CharField(blank=True, max_length=100, verbose_name='id a provider')),
                ('access_token', models.CharField(blank=True, default=None, max_length=130, null=True)),
                ('access_token_exipiry', models.DateTimeField(blank=True, default=None, null=True)),
                ('refresh_token', models.CharField(blank=True, max_length=130, null=True)),
                ('faculty', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='OnPremiseBlockedTimes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starttime', models.DateTimeField(default=None)),
                ('endtime', models.DateTimeField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='OnPremiseBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('showed_up', models.BooleanField(blank=True, default=False)),
                ('slot_start', models.DateTimeField()),
                ('slot_end', models.DateTimeField()),
                ('comment', models.TextField(blank=True, default='')),
                ('canceled', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OnPremiseWorkplace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(default='')),
                ('shortdescription', models.TextField(default='')),
                ('displayed', models.BooleanField(default=True)),
                ('image', models.ImageField(default='nopicture.png', upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='OnPremiseWorkplaceStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateTimeField()),
                ('until_date', models.DateTimeField()),
                ('reason', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hash', models.CharField(max_length=1024)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('newsletter', models.BooleanField(blank=True, default=False, verbose_name='newsletter signup')),
                ('automatically_verifiable', models.BooleanField(blank=True, default=True, verbose_name='tells if someone is automatically verifiable, set to false if it fails')),
                ('verified', models.BooleanField(default=False)),
            ],
            options={
                'permissions': [('inventory_editing', 'able to edit and create the inventory and got nearly full access'), ('lending_access', 'is able to lend stuff')],
            },
        ),
        migrations.CreateModel(
            name='Rental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rental_number', models.BigIntegerField()),
                ('handed_out_at', models.DateTimeField(blank=True, null=True)),
                ('received_back_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('notified', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RentalObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_number', models.CharField(blank=True, max_length=100, null=True)),
                ('rentable', models.BooleanField(default=True)),
                ('internal_identifier', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RentalObjectStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(default='defekt')),
                ('from_date', models.DateField(default=django.utils.timezone.now)),
                ('until_date', models.DateField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999))),
                ('rentable', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RentalObjectType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('shortdescription', models.TextField(default='')),
                ('description', models.TextField(default='')),
                ('manufacturer', models.CharField(default='', max_length=100)),
                ('visible', models.BooleanField(default=False)),
                ('image', models.ImageField(default='nopicture.png', upload_to='')),
                ('prefix_identifier', models.CharField(default='LZ', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reserved_at', models.DateTimeField(auto_now_add=True)),
                ('reserved_from', models.DateField()),
                ('reserved_until', models.DateField()),
                ('operation_number', models.BigIntegerField()),
                ('count', models.PositiveSmallIntegerField()),
                ('canceled', models.DateTimeField(blank=True, default=None, null=True)),
                ('notified', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
                ('public', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description, why is this a suggestion for the other one?')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('content', models.TextField(blank=True, default='', null=True)),
            ],
            options={
                'verbose_name': 'Text',
                'verbose_name_plural': 'texts',
            },
        ),
        migrations.AddConstraint(
            model_name='text',
            constraint=models.UniqueConstraint(fields=('name',), name='Unique_text_slug'),
        ),
        migrations.AddField(
            model_name='suggestion',
            name='suggestion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestion', to='base.rentalobjecttype'),
        ),
        migrations.AddField(
            model_name='suggestion',
            name='suggestion_for',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestion_for', to='base.rentalobjecttype'),
        ),
        migrations.AddConstraint(
            model_name='settings',
            constraint=models.UniqueConstraint(fields=('type',), name='unique_settings'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='objecttype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.rentalobjecttype'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='reserver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reserver', to='base.profile'),
        ),
        migrations.AddField(
            model_name='rentalobjecttype',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rentalobjecttypes', to='base.category'),
        ),
        migrations.AddField(
            model_name='rentalobjecttype',
            name='tags',
            field=models.ManyToManyField(blank=True, to='base.tag'),
        ),
        migrations.AddField(
            model_name='rentalobjectstatus',
            name='rental_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.rentalobject', verbose_name='Rentalobject'),
        ),
        migrations.AddField(
            model_name='rentalobject',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rentalobjects', to='base.rentalobjecttype'),
        ),
        migrations.AddField(
            model_name='rental',
            name='lender',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lender', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='rental',
            name='rented_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.rentalobject'),
        ),
        migrations.AddField(
            model_name='rental',
            name='reservation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.reservation'),
        ),
        migrations.AddField(
            model_name='rental',
            name='return_processor',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='return_processor', to=settings.AUTH_USER_MODEL, verbose_name='person who processes the return'),
        ),
        migrations.AddField(
            model_name='profile',
            name='prio',
            field=models.ForeignKey(blank=True, default=base.models.Profile.highest_priority, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.priority'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='passwordreset',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='onpremiseworkplacestatus',
            name='workplace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status', to='base.onpremiseworkplace'),
        ),
        migrations.AddField(
            model_name='onpremiseworkplace',
            name='exclusions',
            field=models.ManyToManyField(blank=True, to='base.onpremiseworkplace'),
        ),
        migrations.AddField(
            model_name='onpremisebooking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='onpremisebooking',
            name='workplace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.onpremiseworkplace'),
        ),
        migrations.AddField(
            model_name='oauthverificationprocess',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='maxrentduration',
            name='prio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.priority'),
        ),
        migrations.AddField(
            model_name='maxrentduration',
            name='rental_object_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.rentalobjecttype'),
        ),
        migrations.AddField(
            model_name='extension',
            name='extended_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='extension',
            name='extended_rental',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.rental'),
        ),
        migrations.AddConstraint(
            model_name='reservation',
            constraint=models.CheckConstraint(check=models.Q(('reserved_from__lte', models.F('reserved_until'))), name='reservation_reserved_from_date_lte_reserved_until'),
        ),
        migrations.AddConstraint(
            model_name='rentalobjecttype',
            constraint=models.UniqueConstraint(fields=('prefix_identifier',), name='unique_id_prefix'),
        ),
        migrations.AddConstraint(
            model_name='rentalobjectstatus',
            constraint=models.CheckConstraint(check=models.Q(('from_date__lte', models.F('until_date'))), name='object_status_enforce_from_date_lte_until_date'),
        ),
        migrations.AddConstraint(
            model_name='rentalobject',
            constraint=models.UniqueConstraint(fields=('type', 'internal_identifier'), name='unique_identifier'),
        ),
        migrations.AddConstraint(
            model_name='rental',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('handed_out_at__lte', models.F('received_back_at')), ('received_back_at__isnull', True), _connector='OR')), name='rental_handed_out_lte_received_date'),
        ),
        migrations.AddConstraint(
            model_name='maxrentduration',
            constraint=models.UniqueConstraint(fields=('prio', 'rental_object_type'), name='unique_prio_type'),
        ),
    ]
